# Generated by Django 5.2.4 on 2025-08-06 08:53

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Organization name', max_length=255)),
                ('code', models.CharField(help_text='Unique organization code', max_length=50, unique=True)),
                ('contact_email', models.EmailField(help_text='Primary contact email', max_length=254)),
                ('phone', models.CharField(blank=True, help_text='Contact phone number', max_length=20)),
                ('address', models.TextField(blank=True, help_text='Organization address')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is organization active')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('manager', 'Manager'), ('operator', 'Operator'), ('technician', 'Technician'), ('viewer', 'Viewer')], default='viewer', help_text='User role determining access level', max_length=20)),
                ('phone', models.CharField(blank=True, help_text='User phone number', max_length=20)),
                ('department', models.CharField(blank=True, help_text='User department', max_length=100)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='dashboard_user_set', related_query_name='dashboard_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='dashboard_user_set', related_query_name='dashboard_user', to='auth.permission', verbose_name='user permissions')),
                ('organization', models.ForeignKey(help_text='Organization this user belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='users', to='dashboard.organization')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('login', 'User Login'), ('logout', 'User Logout'), ('user_created', 'User Created'), ('user_updated', 'User Updated'), ('user_deleted', 'User Deleted'), ('password_changed', 'Password Changed'), ('profile_updated', 'Profile Updated'), ('permission_changed', 'Permission Changed')], help_text='Action performed', max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, help_text='Browser/client information')),
                ('details', models.JSONField(blank=True, help_text='Additional action details', null=True)),
                ('success', models.BooleanField(default=True, help_text='Was the action successful')),
                ('target_user', models.ForeignKey(blank=True, help_text='User who was affected by the action', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='target_audit_logs', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, help_text='User who performed the action', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timezone', models.CharField(default='UTC', help_text='User timezone', max_length=50)),
                ('language', models.CharField(default='en', help_text='Preferred language', max_length=10)),
                ('theme', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark')], default='light', help_text='UI theme preference', max_length=20)),
                ('email_notifications', models.BooleanField(default=True, help_text='Receive email notifications')),
                ('sms_notifications', models.BooleanField(default=False, help_text='Receive SMS notifications')),
                ('alert_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('hourly', 'Hourly Digest'), ('daily', 'Daily Digest')], default='immediate', help_text='How often to receive alerts', max_length=20)),
                ('avatar', models.CharField(blank=True, help_text='Avatar URL or placeholder', max_length=255, null=True)),
                ('bio', models.TextField(blank=True, help_text='User biography')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
